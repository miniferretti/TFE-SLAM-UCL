<launch>
 <!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find rplidar_ros)/rviz/rplidar.rviz" /> -->
  <node type="rqt_tf_tree" name="rqt_tf_tree" pkg="rqt_tf_tree" />
  <node type="rqt_graph" name="rqt_graph" pkg="rqt_graph" />
  <!--   <node pkg="rqt_image_view" type="rqt_image_view" name="image_view_debug" args="/output/image_raw/compressed" /> -->
  <!--  <node pkg="rp_cyclop" name="rp_cyclop" type="rp_cyclop.py" output="screen" /> -->

  <!-- <node pkg="monodepth_adabin" type="monodepth_adabin.py" name="monodepth_adabin" output="screen" respawn="true">
    <param name="topic_color" value="/raspicam_node/image" />
    <param name="topic_depth" value="/monodepth_adabin/depth_image" />
    <param name="topic_camera_info" value="/raspicam_node/camera_info" />
    <param name="device" value="cpu" />
    <param name="queue_size" type="int" value="5" />
    <param name="slop" type="float" value="0.1" />
  </node> -->

  <!-- TF of the base footprint regarding to the world-->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0.0 0.0 0.0 0.0 0.0 0.0 map odom 100" />
  <node pkg="tf" type="static_transform_publisher" name="world_to_map" args="0.0 0.0 0.0 0.0 0.0 0.0 world map 100" />

  <!--  <node pkg="monodepth" type="monodepth.py" name="monodepth" output="screen" respawn="true">
      <param name="topic_color" value="/raspicam_node/image" />
      <param name="topic_depth" value="/monodepth/depth_image" />
      <param name="topic_camera_info" value="/raspicam_node/camera_info"/>
  </node> -->

  <group ns="rtabmap">
    <arg name="odom_guess" default="false" />

    <!-- Point to Plane ICP? (has effect only when hector:=false) -->
    <arg name="p2n" default="true" />

    <!-- Limit lidar range if > 0  -->
    <arg name="max_range" default="25" />

    <!-- Use libpointmatcher for ICP? -->
    <arg name="pm" default="true" />

    <!-- Example with camera or not -->
    <arg name="camera" default="true" />

    <node pkg="rtabmap_ros" type="icp_odometry" name="icp_odometry">
      <remap from="scan" to="/scan" />
      <remap from="odom" to="/scanmatch_odom" />
      <remap from="odom_info" to="/rtabmap/odom_info" />

      <param name="frame_id" type="string" value="base_footprint" />

      <param if="$(arg odom_guess)" name="odom_frame_id" type="string" value="icp_odom" />
      <param if="$(arg odom_guess)" name="guess_frame_id" type="string" value="odom" />

      <param name="Icp/VoxelSize" type="string" value="0.05" />
      <param name="Icp/RangeMax" type="string" value="$(arg max_range)" />
      <param name="Icp/Epsilon" type="string" value="0.001" />
      <param unless="$(arg odom_guess)" name="Icp/MaxTranslation" type="string" value="0" />
      <!-- can be set to reject large ICP jumps -->
      <param if="$(arg p2n)" name="Icp/PointToPlane" type="string" value="true" />
      <param if="$(arg p2n)" name="Icp/PointToPlaneK" type="string" value="5" />
      <param if="$(arg p2n)" name="Icp/PointToPlaneRadius" type="string" value="0.3" />
      <param unless="$(arg p2n)" name="Icp/PointToPlane" type="string" value="false" />
      <param unless="$(arg p2n)" name="Icp/PointToPlaneK" type="string" value="0" />
      <param unless="$(arg p2n)" name="Icp/PointToPlaneRadius" type="string" value="0" />
      <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.1" />
      <param name="Icp/PM" type="string" value="$(arg pm)" />
      <!-- use libpointmatcher to handle PointToPlane with 2d scans-->
      <param name="Icp/PMOutlierRatio" type="string" value="0.85" />
      <param name="Odom/Strategy" type="string" value="0" />
      <param name="Odom/GuessMotion" type="string" value="true" />
      <param name="Odom/ResetCountdown" type="string" value="0" />
      <param name="Odom/ScanKeyFrameThr" type="string" value="0.9" />
    </node>

    <!-- Nodelet for converting a pointcloud to a depth image and rgb image for rtabmap mapping-->

    <!--  <node pkg="rtabmap_ros" type="pointcloud_to_depthimage" name="pointcloud_to_depthimage">

      <remap from="cloud" to="/monodepth_adabin/pointcloud" />
      <remap from="camera_info" to="/monodepth_adabin/camera_info" />
      <remap from="image" to="/monodepth_adabin/depth_registered/image"/>
      <remap from="image_raw" to="/monodepth_adabin/depth_registered/image_raw"/>

      <param name="queue_size" type="int" value="1" />
      <param name="fixed_frame_id" type="string" value="cam" />
      <param name="approx" type="bool" value="true" />
      <param name="queue_size" type="int" value="1" />
      <param name="decimation" type="int" value="1" />
      <param name="fill_holes_size" type="int" value="0" />

    </node> -->

    <!-- Choose hector_slam or icp_odometry for odometry -->
    <arg name="hector" default="false" />
    <!-- SLAM -->
    <!-- args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start --udebug">
      <param name="frame_id" type="string" value="base_footprint" />

      <param name="subscribe_rgb" type="bool" value="false" />
      <param name="subscribe_depth" type="bool" value="false" />
      <param name="subscribe_rgbd" type="bool" value="$(arg camera)" />
      <param name="subscribe_scan" type="bool" value="true" />

      <remap from="scan" to="/scan" />
      <remap from="rgb/image" to="/monodepth_adabin/image/rgb" />
      <remap from="depth/image" to="/monodepth_adabin/image/depth" />
      <remap from="rgb/camera_info" to="/monodepth_adabin/camera_info" />
      <remap from="rgbd_image" to="/monodepth_adabin/image/rgbd" />


      <!-- <remap from="rgb" to="/raspicam_node/image" /> -->

      <!-- As hector doesn't provide compatible covariance in the odometry topic, don't use the topic and fix the covariance -->
      <param if="$(arg hector)" name="odom_frame_id" type="string" value="hector_map" />
      <param if="$(arg hector)" name="odom_tf_linear_variance" type="double" value="0.0005" />
      <param if="$(arg hector)" name="odom_tf_angular_variance" type="double" value="0.0005" />

      <remap unless="$(arg hector)" from="odom" to="/scanmatch_odom" />
      <param unless="$(arg hector)" name="subscribe_odom_info" type="bool" value="true" />

      <param name="queue_size" type="int" value="300" />

      <!-- RTAB-Map's parameters -->
      <param name="Reg/Strategy" type="string" value="1" />
      <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->
      <param name="Reg/Force3DoF" type="string" value="true" />
      <param name="RGBD/ProximityBySpace" type="string" value="true" />
      <param name="Icp/CorrespondenceRatio" type="string" value="0.2" />
      <param name="Icp/VoxelSize" type="string" value="0.05" />
      <param name="Icp/RangeMax" type="string" value="$(arg max_range)" />
      <param name="Grid/RangeMax" type="string" value="$(arg max_range)" />
      <param name="Icp/PMOutlierRatio" type="string" value="0.65" />
      <param name="Rtabmap/DetectionRate" type="double" value="0.1" />
    </node>

    <node name="rgbd_sync" pkg="rtabmap_ros" type="rgbd_sync" output="screen">
      <remap from="rgb/image" to="/monodepth_adabin/image/rgb" />
      <remap from="depth/image" to="/monodepth_adabin/image/depth" />
      <remap from="rgb/camera_info" to="/monodepth_adabin/camera_info" />
      <remap from="rgbd_image" to="/monodepth_adabin/image/rgbd" />

      <!--<param name="queue_size" type="int" value="10" />-->
      <param name="approx_sync" type="bool" value="true" />

    </node>


    <!-- Visualisation RTAB-Map -->
    <node pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_depth" type="bool" value="false" />
      <param name="subscribe_laserScan" type="bool" value="true"/>

      <param name="frame_id" type="string" value="base_link" />
      <param name="wait_for_transform" type="bool" value="true" />
      <param name="subscribe_rgbd" type="bool" value="true" />

      <remap from="scan" to="/scan" />
      <remap from="rgb/image" to="/monodepth_adabin/image/rgb" />
      <remap from="depth/image" to="/monodepth_adabin/image/depth" />
      <remap from="rgb/camera_info" to="/monodepth_adabin/camera_info" />
      <remap from="rgbd_image" to="/monodepth_adabin/image/rgbd" />

      <remap from="odom" to="/scanmatch_odom" />

      <param name="rgb/image_transport" type="string" value="compressed" />
      <param name="depth/image_transport" type="string" value="compressedDepth" />
    </node>

  </group>

</launch>